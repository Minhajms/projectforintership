name: CI/CD for MERN Stack

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and Push Backend Docker Image
      - name: Build and Push Backend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mern-backend:latest -f ./Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/mern-backend:latest

      # Step 4: Build and Push Frontend Docker Image
      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mern-frontend:latest -f ./client/Dockerfile ./client
          docker push ${{ secrets.DOCKER_USERNAME }}/mern-frontend:latest

      # Step 5: Set up SSH for EC2
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Step 6: Deploy on EC2
      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          set -e
          echo "Starting deployment on EC2..."

          # Pull updated Docker images
          docker pull ${{ secrets.DOCKER_USERNAME }}/mern-backend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/mern-frontend:latest

          # Stop and remove existing containers if they exist
          docker stop mern-backend || true
          docker rm mern-backend || true
          docker stop mern-frontend || true
          docker rm mern-frontend || true
          docker stop mern-database || true
          docker rm mern-database || true

          # Run MongoDB container
          echo "Starting MongoDB..."
          docker run -d --name mern-database -p 27017:27017 -v mern-db-data:/data/db mongo:latest
          
          # Wait for MongoDB to initialize
          until docker exec mern-database mongo --eval "db.runCommand('ping')" > /dev/null 2>&1; do
            echo "Waiting for MongoDB to initialize..."
            sleep 5
          done
          echo "MongoDB is ready!"

          # Run backend container
          echo "Starting Backend..."
          docker run -d --name mern-backend -p 5000:5000 --env-file /home/ubuntu/backend/.env --link mern-database:mongo ${{ secrets.DOCKER_USERNAME }}/mern-backend:latest

          # Run frontend container
          echo "Starting Frontend..."
          docker run -d --name mern-frontend -p 80:80 ${{ secrets.DOCKER_USERNAME }}/mern-frontend:latest

          echo "Deployment completed successfully!"
          EOF
