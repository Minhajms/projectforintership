name: CI/CD for MERN Stack

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and Push Backend Docker Image
      - name: Build and Push Backend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mern-backend:latest -f ./Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/mern-backend:latest

      # Step 4: Build and Push Frontend Docker Image
      - name: Build and Push Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mern-frontend:latest -f ./client/Dockerfile ./client
          docker push ${{ secrets.DOCKER_USERNAME }}/mern-frontend:latest

      # Step 5: Set up SSH for EC2
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Step 6: Create .env File for Backend
      - name: Create .env File
        run: |
          echo "MONGO_URI=mongodb://mern-database:27017" > .env
          echo "PORT=5000" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          # Add other required environment variables here

      # Step 7: Deploy on EC2
      - name: Deploy on EC2
        run: |
          # Transfer .env file to EC2 and disable host key verification for SSH
          scp -o StrictHostKeyChecking=no .env ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/backend/.env

          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          set -e
          echo "Starting deployment on EC2..."
          
          # Stop and remove old containers
          docker stop mern-backend mern-frontend mern-database 2>/dev/null || true
          docker rm mern-backend mern-frontend mern-database 2>/dev/null || true
          
          # Pull updated Docker images
          docker pull ${{ secrets.DOCKER_USERNAME }}/mern-backend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/mern-frontend:latest
          docker pull mongo:latest
          
          # Start MongoDB
          docker run -d --name mern-database -p 27017:27017 -v mern-db-data:/data/db mongo:latest
          
          # Start Backend
          docker run -d --name mern-backend -p 5000:5000 --env-file /home/ubuntu/backend/.env --link mern-database:mongo ${{ secrets.DOCKER_USERNAME }}/mern-backend:latest
          
          # Start Frontend
          docker run -d --name mern-frontend -p 80:80 ${{ secrets.DOCKER_USERNAME }}/mern-frontend:latest
          EOF
